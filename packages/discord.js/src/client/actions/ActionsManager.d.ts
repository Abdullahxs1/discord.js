import Action from './Action';
import Client from '../Client';
import { Guild } from '../../structures/Guild';
import { BaseChannel } from '../../structures/BaseChannel';
import WebSocketShard from '../websocket/WebSocketShard';
import { Message } from '../../structures/Message';

declare class ActionsManager {
  injectedUser: symbol;
  injectedChannel: symbol;
  injectedMessage: symbol;
  client: Client;

  constructor(client: Client);

  register(action: typeof Action): void;

  // Autogenerated start
  ApplicationCommandPermissionsUpdate: Action<
    [import('discord-api-types/v10').GatewayApplicationCommandPermissionsUpdateDispatchData]
  >;
  AutoModerationActionExecution: Action<
    [import('discord-api-types/v10').GatewayAutoModerationActionExecutionDispatchData]
  >;
  AutoModerationRuleCreate: Action<[import('discord-api-types/v10').GatewayAutoModerationRuleCreateDispatchData]>;
  AutoModerationRuleDelete: Action<[import('discord-api-types/v10').GatewayAutoModerationRuleDeleteDispatchData]>;
  AutoModerationRuleUpdate: Action<[import('discord-api-types/v10').GatewayAutoModerationRuleUpdateDispatchData]>;
  ChannelCreate: Action<[import('discord-api-types/v10').GatewayChannelCreateDispatchData]>;
  ChannelDelete: Action<[import('discord-api-types/v10').GatewayChannelDeleteDispatchData]>;
  ChannelUpdate: Action<
    [import('discord-api-types/v10').GatewayChannelUpdateDispatchData],
    { old?: BaseChannel; updated?: BaseChannel }
  >;
  EntitlementCreate: Action<[import('discord-api-types/v10').GatewayEntitlementCreateDispatchData]>;
  EntitlementDelete: Action<[import('discord-api-types/v10').GatewayEntitlementDeleteDispatchData]>;
  EntitlementUpdate: Action<[import('discord-api-types/v10').GatewayEntitlementUpdateDispatchData]>;
  GuildAuditLogEntryCreate: Action<[import('discord-api-types/v10').GatewayGuildAuditLogEntryCreateDispatchData]>;
  GuildBanAdd: Action<[import('discord-api-types/v10').GatewayGuildBanAddDispatchData]>;
  GuildBanRemove: Action<[import('discord-api-types/v10').GatewayGuildBanRemoveDispatchData]>;
  GuildChannelsPositionUpdate: Action<
    [{ guild_id: string; channels: { id: string; position: number }[] }],
    { guild: Guild }
  >;
  GuildDelete: Action<[import('discord-api-types/v10').GatewayGuildDeleteDispatchData]>;
  GuildEmojiCreate: Action<[guild: Guild, emoji: import('discord-api-types/v10').APIEmoji]>;
  GuildEmojiDelete: Action<[emoji: import('discord-api-types/v10').APIEmoji]>;
  GuildEmojiUpdate: Action<
    [oldEmoji: import('discord-api-types/v10').APIEmoji, newEmoji: import('discord-api-types/v10').APIEmoji]
  >;
  GuildEmojisUpdate: Action<[import('discord-api-types/v10').GatewayGuildEmojisUpdateDispatchData]>;
  GuildIntegrationsUpdate: Action<[import('discord-api-types/v10').GatewayGuildIntegrationsUpdateDispatchData]>;
  GuildMemberRemove: Action<[import('discord-api-types/v10').GatewayGuildMemberRemoveDispatchData, WebSocketShard]>;
  GuildMemberUpdate: Action<[import('discord-api-types/v10').GatewayGuildMemberUpdateDispatchData, WebSocketShard]>;
  GuildRoleCreate: Action<[import('discord-api-types/v10').GatewayGuildRoleCreateDispatchData]>;
  GuildRoleDelete: Action<[import('discord-api-types/v10').GatewayGuildRoleDeleteDispatchData]>;
  GuildRoleUpdate: Action<[import('discord-api-types/v10').GatewayGuildRoleUpdateDispatchData]>;
  GuildRolesPositionUpdate: Action<[{ guild_id: string; roles: { id: string; position: number }[] }], { guild: Guild }>;
  GuildScheduledEventCreate: Action<[import('discord-api-types/v10').GatewayGuildScheduledEventCreateDispatchData]>;
  GuildScheduledEventDelete: Action<[import('discord-api-types/v10').GatewayGuildScheduledEventDeleteDispatchData]>;
  GuildScheduledEventUpdate: Action<[import('discord-api-types/v10').GatewayGuildScheduledEventUpdateDispatchData]>;
  GuildScheduledEventUserAdd: Action<[import('discord-api-types/v10').GatewayGuildScheduledEventUserAddDispatchData]>;
  GuildScheduledEventUserRemove: Action<
    [import('discord-api-types/v10').GatewayGuildScheduledEventUserRemoveDispatchData]
  >;
  GuildStickerCreate: Action<
    [guild: Guild, sticker: import('discord-api-types/v10').APISticker],
    { sticker: import('discord-api-types/v10').APISticker }
  >;
  GuildStickerDelete: Action<[sticker: import('discord-api-types/v10').APISticker]>;
  GuildStickerUpdate: Action<
    [oldSticker: import('discord-api-types/v10').APISticker, newSticker: import('discord-api-types/v10').APISticker]
  >;
  GuildStickersUpdate: Action<[import('discord-api-types/v10').GatewayGuildStickersUpdateDispatchData]>;
  GuildUpdate: Action<[import('discord-api-types/v10').GatewayGuildUpdateDispatchData]>;
  InteractionCreate: Action<[import('discord-api-types/v10').GatewayInteractionCreateDispatchData]>;
  InviteCreate: Action<[import('discord-api-types/v10').GatewayInviteCreateDispatchData]>;
  InviteDelete: Action<[import('discord-api-types/v10').GatewayInviteDeleteDispatchData]>;
  MessageCreate: Action<[import('discord-api-types/v10').GatewayMessageCreateDispatchData]>;
  MessageDelete: Action<[import('discord-api-types/v10').GatewayMessageDeleteDispatchData]>;
  MessageDeleteBulk: Action<[import('discord-api-types/v10').GatewayMessageDeleteBulkDispatchData]>;
  MessagePollVoteAdd: Action<[import('discord-api-types/v10').GatewayMessagePollVoteDispatchData]>;
  MessagePollVoteRemove: Action<[import('discord-api-types/v10').GatewayMessagePollVoteDispatchData]>;
  MessageReactionAdd: Action<[import('discord-api-types/v10').GatewayMessageReactionAddDispatchData]>;
  MessageReactionRemove: Action<[import('discord-api-types/v10').GatewayMessageReactionRemoveDispatchData]>;
  MessageReactionRemoveAll: Action<[import('discord-api-types/v10').GatewayMessageReactionRemoveAllDispatchData]>;
  MessageReactionRemoveEmoji: Action<[import('discord-api-types/v10').GatewayMessageReactionRemoveEmojiDispatchData]>;
  MessageUpdate: Action<
    [import('discord-api-types/v10').GatewayMessageUpdateDispatchData],
    { old?: Message; updated?: Message }
  >;
  PresenceUpdate: Action<[import('discord-api-types/v10').GatewayPresenceUpdateDispatchData]>;
  StageInstanceCreate: Action<[import('discord-api-types/v10').GatewayStageInstanceCreateDispatchData]>;
  StageInstanceDelete: Action<[import('discord-api-types/v10').GatewayStageInstanceDeleteDispatchData]>;
  StageInstanceUpdate: Action<[import('discord-api-types/v10').GatewayStageInstanceUpdateDispatchData]>;
  ThreadCreate: Action<[import('discord-api-types/v10').GatewayThreadCreateDispatchData]>;
  ThreadDelete: Action<[import('discord-api-types/v10').GatewayThreadDeleteDispatchData]>;
  ThreadListSync: Action<[import('discord-api-types/v10').GatewayThreadListSyncDispatchData]>;
  ThreadMemberUpdate: Action<[import('discord-api-types/v10').GatewayThreadMemberUpdateDispatchData]>;
  ThreadMembersUpdate: Action<[import('discord-api-types/v10').GatewayThreadMembersUpdateDispatchData]>;
  TypingStart: Action<[import('discord-api-types/v10').GatewayTypingStartDispatchData]>;
  UserUpdate: Action<[import('discord-api-types/v10').GatewayUserUpdateDispatchData]>;
  VoiceStateUpdate: Action<[import('discord-api-types/v10').GatewayVoiceStateUpdateDispatchData]>;
  WebhooksUpdate: Action<[import('discord-api-types/v10').GatewayWebhooksUpdateDispatchData]>;
  // Autogenerated end
}

export = ActionsManager;
